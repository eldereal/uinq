/* This file is auto generated by codegen project. Don't modify this file directly */
/* SelectMany for system sources and system mapper */
using System;
using System.Collections.Generic;
namespace Uniq
{
    public static partial class Uniq
    {
        public static Enumerable<SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>, SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this T[] source, Func<T, TR[]> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>, SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this T[] source, Func<T, List<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>, SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this T[] source, Func<T, HashSet<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>, SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this T[] source, Func<T, LinkedList<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>, SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this T[] source, Func<T, Stack<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>, SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this T[] source, Func<T, Queue<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this T[] source, Func<T, Dictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this T[] source, Func<T, SortedDictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>, SelectManyIndirect<ArrayEach<T>, ArrayEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this T[] source, Func<T, IEnumerable<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>, SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this List<T> source, Func<T, TR[]> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>, SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this List<T> source, Func<T, List<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>, SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this List<T> source, Func<T, HashSet<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>, SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this List<T> source, Func<T, LinkedList<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>, SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this List<T> source, Func<T, Stack<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>, SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this List<T> source, Func<T, Queue<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this List<T> source, Func<T, Dictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this List<T> source, Func<T, SortedDictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>, SelectManyIndirect<ListEach<T>, ListEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this List<T> source, Func<T, IEnumerable<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>, SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this HashSet<T> source, Func<T, TR[]> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>, SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this HashSet<T> source, Func<T, List<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>, SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this HashSet<T> source, Func<T, HashSet<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>, SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this HashSet<T> source, Func<T, LinkedList<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>, SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this HashSet<T> source, Func<T, Stack<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>, SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this HashSet<T> source, Func<T, Queue<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this HashSet<T> source, Func<T, Dictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this HashSet<T> source, Func<T, SortedDictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>, SelectManyIndirect<HashSetEach<T>, HashSetEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this HashSet<T> source, Func<T, IEnumerable<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>, SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this LinkedList<T> source, Func<T, TR[]> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>, SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this LinkedList<T> source, Func<T, List<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>, SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this LinkedList<T> source, Func<T, HashSet<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>, SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this LinkedList<T> source, Func<T, LinkedList<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>, SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this LinkedList<T> source, Func<T, Stack<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>, SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this LinkedList<T> source, Func<T, Queue<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this LinkedList<T> source, Func<T, Dictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this LinkedList<T> source, Func<T, SortedDictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>, SelectManyIndirect<LinkedListEach<T>, LinkedListEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this LinkedList<T> source, Func<T, IEnumerable<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>, SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Stack<T> source, Func<T, TR[]> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>, SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Stack<T> source, Func<T, List<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>, SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Stack<T> source, Func<T, HashSet<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>, SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Stack<T> source, Func<T, LinkedList<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>, SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Stack<T> source, Func<T, Stack<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>, SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Stack<T> source, Func<T, Queue<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this Stack<T> source, Func<T, Dictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this Stack<T> source, Func<T, SortedDictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>, SelectManyIndirect<StackEach<T>, StackEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Stack<T> source, Func<T, IEnumerable<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>, SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Queue<T> source, Func<T, TR[]> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>, SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Queue<T> source, Func<T, List<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>, SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Queue<T> source, Func<T, HashSet<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>, SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Queue<T> source, Func<T, LinkedList<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>, SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Queue<T> source, Func<T, Stack<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>, SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Queue<T> source, Func<T, Queue<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this Queue<T> source, Func<T, Dictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this Queue<T> source, Func<T, SortedDictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>, SelectManyIndirect<QueueEach<T>, QueueEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this Queue<T> source, Func<T, IEnumerable<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>, SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this Dictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, TR[]> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>, SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this Dictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, List<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>, SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this Dictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, HashSet<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>, SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this Dictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, LinkedList<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>, SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this Dictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, Stack<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>, SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this Dictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, Queue<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<TK,TV, TRK,TRV>(this Dictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, Dictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<TK,TV, TRK,TRV>(this Dictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, SortedDictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>, SelectManyIndirect<DictionaryEach<TK,TV>, DictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this Dictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, IEnumerable<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>, SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this SortedDictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, TR[]> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>, SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this SortedDictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, List<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>, SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this SortedDictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, HashSet<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>, SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this SortedDictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, LinkedList<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>, SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this SortedDictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, Stack<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>, SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this SortedDictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, Queue<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<TK,TV, TRK,TRV>(this SortedDictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, Dictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<TK,TV, TRK,TRV>(this SortedDictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, SortedDictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>, SelectManyIndirect<SortedDictionaryEach<TK,TV>, SortedDictionaryEach<TK,TV>.Enumerator, KeyValuePair<TK,TV>, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<TK,TV, TR>(this SortedDictionary<TK,TV> source, Func<KeyValuePair<TK,TV>, IEnumerable<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>, SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, TR[], ArrayEach<TR>, ArrayEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this IEnumerable<T> source, Func<T, TR[]> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>, SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, List<TR>, ListEach<TR>, ListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this IEnumerable<T> source, Func<T, List<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>, SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, HashSet<TR>, HashSetEach<TR>, HashSetEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this IEnumerable<T> source, Func<T, HashSet<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>, SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, LinkedList<TR>, LinkedListEach<TR>, LinkedListEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this IEnumerable<T> source, Func<T, LinkedList<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>, SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, Stack<TR>, StackEach<TR>, StackEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this IEnumerable<T> source, Func<T, Stack<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>, SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, Queue<TR>, QueueEach<TR>, QueueEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this IEnumerable<T> source, Func<T, Queue<TR>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, Dictionary<TRK,TRV>, DictionaryEach<TRK,TRV>, DictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this IEnumerable<T> source, Func<T, Dictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>, SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, SortedDictionary<TRK,TRV>, SortedDictionaryEach<TRK,TRV>, SortedDictionaryEach<TRK,TRV>.Enumerator, KeyValuePair<TRK,TRV>>.Enumerator, KeyValuePair<TRK,TRV>> SelectMany<T, TRK,TRV>(this IEnumerable<T> source, Func<T, SortedDictionary<TRK,TRV>> mapper){ return source.Each().SelectMany(mapper); }
        public static Enumerable<SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>, SelectManyIndirect<EnumerableEach<T>, EnumerableEach<T>.Enumerator, T, IEnumerable<TR>, EnumerableEach<TR>, EnumerableEach<TR>.Enumerator, TR>.Enumerator, TR> SelectMany<T, TR>(this IEnumerable<T> source, Func<T, IEnumerable<TR>> mapper){ return source.Each().SelectMany(mapper); }
    }
}
